package javaconverterapp;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileWriter;
import javax.swing.JOptionPane;
import org.json.JSONArray;
import org.json.JSONObject;
import org.json.XML;

/**
 * Dosya yolu verilen dosyayı string olarak okuyup
 * Xml'den Json'a yada Json'dan Xml'e dönüştürmeyi sağlar.
 * @author Gurel
 */
public class SelectFrame extends javax.swing.JFrame
{

    /**
     * Creates new form SelectFrame
     */
    public SelectFrame()
    {
        initComponents();
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Java Converter");

        jButton1.setText("XML to JSON");
        jButton1.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                XmlToJsonActionPerformed(evt);
            }
        });

        jButton2.setText("JSON to XML");
        jButton2.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                JsonToXmlActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 370, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(25, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void XmlToJsonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_XmlToJsonActionPerformed
    {//GEN-HEADEREND:event_XmlToJsonActionPerformed
        ConverterFrame cf = new ConverterFrame()
        {
            public void convertToFile()
            {
                String tp = getTargetPath();
                if(tp.equals(""))
                {
                    JOptionPane.showMessageDialog(rootPane,"Hedef dosyanın adını giriniz.", "HATA",JOptionPane.ERROR_MESSAGE);
                    return ;
                }
                if(!tp.endsWith(".json")) tp+=".json";
                File target = new File(tp);
                if(target.isDirectory())
                {
                    JOptionPane.showMessageDialog(rootPane,"Hedef dosyanın adını giriniz.", "HATA",JOptionPane.ERROR_MESSAGE);
                    return ;
                }
                String xmlStr=fileToString(getSourcePath());
                try
                {
                    JSONObject jsonObj=XML.toJSONObject(xmlStr);
                    FileWriter fw=new FileWriter(target);
                    fw.write(jsonObj.toString(4));
                    fw.close();
                    JOptionPane.showMessageDialog(rootPane, "Dosya başarıyla convert edildi.", "INFO", JOptionPane.INFORMATION_MESSAGE);
                } catch (Exception e){e.printStackTrace();}
            }
        };        
        dispose();
        cf.setLocation(this.getLocation());
        cf.setTitle("Xml'den Json'a");
        cf.setVisible(true);       
    }//GEN-LAST:event_XmlToJsonActionPerformed

    private void JsonToXmlActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_JsonToXmlActionPerformed
    {//GEN-HEADEREND:event_JsonToXmlActionPerformed
        ConverterFrame cf=new ConverterFrame()
        {
            public void convertToFile()
            {
                String tp=getTargetPath();
                if(tp.equals(""))
                {
                    JOptionPane.showMessageDialog(rootPane,"Hedef dosyanın adını giriniz.", "HATA",JOptionPane.ERROR_MESSAGE);
                    return ;
                }
                if(!tp.endsWith(".xml")) tp+=".xml";
                File target=new File(tp);
                if(target.isDirectory())
                {
                    JOptionPane.showMessageDialog(rootPane,"Hedef dosyanın adını giriniz.", "HATA",JOptionPane.ERROR_MESSAGE);
                    return ;
                }
                String jsonStr=fileToString(getSourcePath());
                String xml;
                ConverterFrame cf;
                try
                {
                    if(jsonStr.startsWith("{"))
                    {
                        JSONObject json=new JSONObject(jsonStr);
                        xml=XML.toString(json);
                        FileWriter fw=new FileWriter(target);
                        fw.write("<?xml version=\"1.0\" ?>");
                        fw.write("<File>");
                        fw.write(xml);
                        fw.write("</File>");
                        fw.close();
                        cf = new ConverterFrame();
                        JOptionPane.showMessageDialog(rootPane, "Dosya başarıyla convert edildi.", "INFO", JOptionPane.INFORMATION_MESSAGE);
                    }
                    else if(jsonStr.startsWith("["))
                    {
                        JSONArray jsona=new JSONArray(jsonStr);
                        FileWriter fw=new FileWriter(target);
                        fw.write("<?xml version=\"1.0\" ?>");
                        fw.write("<File>");
                        fw.write("<OuterArray>");
                        for(int i=0;i<jsona.length();i++)
                        {
                            JSONObject json=jsona.getJSONObject(i);
                            xml=XML.toString(json);
                            fw.write(xml);
                        }
                        fw.write("</OuterArray>");
                        fw.write("</File>");
                        fw.close();
                        cf = new ConverterFrame();
                        JOptionPane.showMessageDialog(rootPane, "Dosya başarıyla convert edildi.", "INFO", JOptionPane.INFORMATION_MESSAGE);
                    }                   
                } catch (Exception e){e.printStackTrace();}
            }
        };       
        dispose();
        cf.setLocation(this.getLocation());
        cf.setTitle("Json'dan Xml'e");
        cf.setVisible(true);
    }//GEN-LAST:event_JsonToXmlActionPerformed
    
    /**
     * Dosya yolu verilen dosyayı String olarak okur.
     * @param path dosya yoludur
     * @return String olarak geri döndürür.
     */
    public String fileToString(String path)
    {
        String str="";  
        File f=new File(path);
        try
        {
            FileInputStream fis=new FileInputStream(f);
            byte[] b=new byte[(int)f.length()];
            fis.read(b);
            str=new String(b,"UTF-8");
        } 
        catch (Exception e){e.printStackTrace();}
        if(str.equals("")) str="HATA";
        return str;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
            {
                if ("Windows".equals(info.getName()))
                {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex)
        {
            java.util.logging.Logger.getLogger(SelectFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex)
        {
            java.util.logging.Logger.getLogger(SelectFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex)
        {
            java.util.logging.Logger.getLogger(SelectFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex)
        {
            java.util.logging.Logger.getLogger(SelectFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable()
        {
            public void run()
            {
                new SelectFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}
